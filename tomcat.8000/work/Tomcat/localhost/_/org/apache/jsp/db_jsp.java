/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.50
 * Generated at: 2017-08-31 11:18:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import business.beans.ServerLifetimeBean;
import data.facades.MedicalconsultationFacade;
import data.entities.Medicalconsultation;
import data.entities.Medicalhistory;
import data.facades.MedicalhistoryFacade;
import data.facades.DoctorPatientFacade;
import data.entities.DoctorPatient;
import data.entities.Healthcard;
import data.facades.HealthcardFacade;
import java.text.SimpleDateFormat;
import data.facades.PatientFacade;
import data.entities.Patient;
import data.entities.Doctor;
import data.facades.DoctorFacade;
import data.entities.Administrative;
import data.facades.AdministrativeFacade;
import java.util.List;
import data.entities.Useraccount;
import javax.naming.InitialContext;
import data.facades.UseraccountFacade;

public final class db_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>DB ChronoMed</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <h1>El servidor lleva funcionando\n");
      out.write("        ");
 
            ServerLifetimeBean lifetimeBean = InitialContext.doLookup("java:global/ChronoMed/ServerLifetimeBean");
            out.print(lifetimeBean.getTime());
        
      out.write("\n");
      out.write("        minutos</h1>\n");
      out.write("        <hr/>\n");
      out.write("        \n");
      out.write("        <h1 style=\"margin-bottom:0;\">Base de datos: ChronoMed</h1>\n");
      out.write("\n");
      out.write("        <h1 style=\"margin-bottom:0;\">userAccount</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>id</th>\n");
      out.write("                <th>email</th>\n");
      out.write("                <th>password</th>\n");
      out.write("                <th>active</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                UseraccountFacade uaFacade = InitialContext.doLookup("java:global/ChronoMed/UseraccountFacade");
                List<Useraccount> userAccounts = uaFacade.findAll();
                for (Useraccount userAccount : userAccounts) {
                    out.println(
                            "<tr>"
                            + "<td>" + userAccount.getId() + "</td>"
                            + "<td>" + userAccount.getEmail() + "</td>"
                            + "<td>" + userAccount.getPassword() + "</td>"
                            + "<td>" + userAccount.getActive() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("        <h1 style=\"margin-bottom:0;\">administrative</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>id</th>\n");
      out.write("                <th>name</th>\n");
      out.write("                <th>surname</th>\n");
      out.write("                <th>nif</th>\n");
      out.write("                <th>userAccount</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                AdministrativeFacade aFacade = InitialContext.doLookup("java:global/ChronoMed/AdministrativeFacade");
                List<Administrative> administratives = aFacade.findAll();
                for (Administrative administrative : administratives) {
                    out.println(
                            "<tr>"
                            + "<td>" + administrative.getId() + "</td>"
                            + "<td>" + administrative.getName() + "</td>"
                            + "<td>" + administrative.getSurname() + "</td>"
                            + "<td>" + administrative.getNif() + "</td>"
                            + "<td>" + administrative.getUserAccountID().getId() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("        <h1 style=\"margin-bottom:0;\">doctor</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>id</th>\n");
      out.write("                <th>boardNumber</th>\n");
      out.write("                <th>name</th>\n");
      out.write("                <th>surname</th>\n");
      out.write("                <th>gender</th>\n");
      out.write("                <th>phoneNumber</th>\n");
      out.write("                <th>alternativePhoneNumber</th>\n");
      out.write("                <th>speciality</th>\n");
      out.write("                <th>nif</th>\n");
      out.write("                <th>userAccount</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                DoctorFacade dFacade = InitialContext.doLookup("java:global/ChronoMed/DoctorFacade");
                List<Doctor> doctors = dFacade.findAll();
                for (Doctor doctor : doctors) {
                    out.println(
                            "<tr>"
                            + "<td>" + doctor.getId() + "</td>"
                            + "<td>" + doctor.getBoardNumber() + "</td>"
                            + "<td>" + doctor.getName() + "</td>"
                            + "<td>" + doctor.getSurname() + "</td>"
                            + "<td>" + doctor.getGender() + "</td>"
                            + "<td>" + doctor.getPhoneNumber() + "</td>"
                            + "<td>" + doctor.getAlternativePhoneNumber() + "</td>"
                            + "<td>" + doctor.getSpeciality() + "</td>"
                            + "<td>" + doctor.getNif() + "</td>"
                            + "<td>" + doctor.getUserAccountID().getId() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("        <h1 style=\"margin-bottom:0;\">doctor_patient</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>id</th>\n");
      out.write("                <th>doctor</th>\n");
      out.write("                <th>patient</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                DoctorPatientFacade dpFacade = InitialContext.doLookup("java:global/ChronoMed/DoctorPatientFacade");
                List<DoctorPatient> doctorPatients = dpFacade.findAll();
                for (DoctorPatient doctorPatient : doctorPatients) {
                    out.println(
                            "<tr>"
                            + "<td>" + doctorPatient.getId() + "</td>"
                            + "<td>" + doctorPatient.getDoctorID().getId()+ "</td>"
                            + "<td>" + doctorPatient.getPatientID().getId() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("        <h1 style=\"margin-bottom:0;\">patient</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>id</th>\n");
      out.write("                <th>name</th>\n");
      out.write("                <th>surname</th>\n");
      out.write("                <th>gender</th>\n");
      out.write("                <th>address</th>\n");
      out.write("                <th>locality</th>\n");
      out.write("                <th>zipCode</th>\n");
      out.write("                <th>province</th>\n");
      out.write("                <th>country</th>\n");
      out.write("                <th>phoneNumber</th>\n");
      out.write("                <th>AlternativePhoneNumber</th>\n");
      out.write("                <th>birthDate</th>\n");
      out.write("                <th>nif</th>\n");
      out.write("                <th>nationality</th>\n");
      out.write("                <th>userAccount</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                PatientFacade pFacade = InitialContext.doLookup("java:global/ChronoMed/PatientFacade");
                List<Patient> patients = pFacade.findAll();
                for (Patient patient : patients) {
                    out.println(
                            "<tr>"
                            + "<td>" + patient.getId() + "</td>"
                            + "<td>" + patient.getName() + "</td>"
                            + "<td>" + patient.getSurname() + "</td>"
                            + "<td>" + patient.getGender() + "</td>"
                            + "<td>" + patient.getAddress() + "</td>"
                            + "<td>" + patient.getLocality() + "</td>"
                            + "<td>" + patient.getZipCode() + "</td>"
                            + "<td>" + patient.getProvince() + "</td>"
                            + "<td>" + patient.getCountry() + "</td>"
                            + "<td>" + patient.getPhoneNumber() + "</td>"
                            + "<td>" + patient.getAlternativePhoneNumber() + "</td>"
                            + "<td>" + new SimpleDateFormat("dd/MM/yyyy").format(patient.getBirthDate()) + "</td>"
                            + "<td>" + patient.getNif() + "</td>"
                            + "<td>" + patient.getNationality() + "</td>"
                            + "<td>" + patient.getUserAccountID().getId() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("        <h1 style=\"margin-bottom:0;\">healthCard</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>id</th>\n");
      out.write("                <th>number</th>\n");
      out.write("                <th>patient</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                HealthcardFacade hcFacade = InitialContext.doLookup("java:global/ChronoMed/HealthcardFacade");
                List<Healthcard> healthcards = hcFacade.findAll();
                for (Healthcard healthcard : healthcards) {
                    out.println(
                            "<tr>"
                            + "<td>" + healthcard.getId() + "</td>"
                            + "<td>" + healthcard.getNumber() + "</td>"
                            + "<td>" + healthcard.getPatientID().getId() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("        \n");
      out.write("        <h1 style=\"margin-bottom:0;\">medicalhistory</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("                <th>id</th>\n");
      out.write("                <th>bloodtype</th>\n");
      out.write("                <th>familyHistory</th>\n");
      out.write("                <th>allergies</th>\n");
      out.write("                <th>pathologies</th>\n");
      out.write("                <th>surgeries</th>\n");
      out.write("                <th>others</th>\n");
      out.write("                <th>patientID</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                MedicalhistoryFacade mhFacade = InitialContext.doLookup("java:global/ChronoMed/MedicalhistoryFacade");
                List<Medicalhistory> medicalhistories = mhFacade.findAll();
                for (Medicalhistory medicalhistory : medicalhistories) {
                    out.println(
                            "<tr>"
                            + "<td>" + medicalhistory.getId() + "</td>"
                            + "<td>" + medicalhistory.getBloodType()+ "</td>"
                            + "<td>" + medicalhistory.getFamilyHistory()+ "</td>"
                            + "<td>" + medicalhistory.getAllergies()+ "</td>"
                            + "<td>" + medicalhistory.getPathologies()+ "</td>"
                            + "<td>" + medicalhistory.getSurgeries()+ "</td>"
                            + "<td>" + medicalhistory.getOthers()+ "</td>"
                            + "<td>" + medicalhistory.getPatientID().getId() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        <h1 style=\"margin-bottom:0;\">medicalconsultation</h1>\n");
      out.write("        <table>\n");
      out.write("            <tr>\n");
      out.write("             <th>id</th>\n");
      out.write("                <th>date</th>\n");
      out.write("                <th>symptoms</th>\n");
      out.write("                <th>treatment</th>\n");
      out.write("                <th>recomendations</th>\n");
      out.write("                <th>examinations</th>\n");
      out.write("                <th>doctorID</th>\n");
      out.write("                <th>patientID</th>\n");
      out.write("            </tr>\n");
      out.write("            ");

                MedicalconsultationFacade mcFacade = InitialContext.doLookup("java:global/ChronoMed/MedicalconsultationFacade");
                List<Medicalconsultation> medicalconsultations = mcFacade.findAll();
                for (Medicalconsultation medicalconsultation : medicalconsultations) {
                    out.println(
                            "<tr>"
                            + "<td>" + medicalconsultation.getId() + "</td>"
                            + "<td>" + medicalconsultation.getDate() + "</td>"
                            + "<td>" + medicalconsultation.getSymptoms() + "</td>"
                            + "<td>" + medicalconsultation.getTreatment() + "</td>"
                            + "<td>" + medicalconsultation.getRecomendations() + "</td>"
                            + "<td>" + medicalconsultation.getExaminations() + "</td>"
                            + "<td>" + medicalconsultation.getDoctorID().getId() + "</td>"
                            + "<td>" + medicalconsultation.getPatientID().getId() + "</td>"
                            + "</tr>"
                    );
                }
            
      out.write("\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
